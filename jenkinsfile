pipeline {
    agent any

    tools {
        jdk 'jdk17'
        nodejs 'nodejs'
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {

        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Git Checkout') {
            steps {
                git 'https://github.com/pj013525/DevOps-Project-Swiggy.git'
            }
        }

        stage('Code Quality Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                        $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=swiggy \
                        -Dsonar.projectKey=swiggy-app \
                        -Dsonar.sources=.
                    '''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-creds'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Dependencies-Check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit', odcInstallation: 'dependency-check'
                dependencyCheckPublisher pattern: '**/dependency-check.xml'
            }
        }

        stage('TRIVY FS SCAN') {
            steps {
                sh '''
                    mkdir -p /var/lib/trivy-cache
                    trivy fs . --cache-dir /var/lib/trivy-cache >> trivy-scanned-files.txt
                '''
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dockerhub-creds', toolName: 'docker') {
                        sh '''
                            docker build -t swiggy-image .
                            docker tag swiggy-image pj013525/swiggy-image:latest
                            docker push pj013525/swiggy-image
                        '''
                    }
                }
            }
        }

        stage('TRIVY IMAGE SCAN') {
            steps {
                sh '''
                    mkdir -p /var/lib/trivy-cache
                    trivy image pj013525/swiggy-image:latest --cache-dir /var/lib/trivy-cache >> trivy-scanned-images.txt
                '''
            }
        }

        stage('Run Container') {
            steps {
                sh 'docker run -d --name Swiggy-App -p 3000:3000 pj013525/swiggy-image:latest'
            }
        }
    }
}
