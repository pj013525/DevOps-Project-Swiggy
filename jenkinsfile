pipeline {
    agent any

    tools {
        jdk 'jdk-17'
        nodejs 'nodejs-18'  
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        DOCKER_IMAGE = 'pj013525/myapp'
        DOCKER_USER = 'pj013525'
        APP_VERSION = '1.0.3-SNAPSHOT'
        DEPLOY_ENV = 'prod'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Git Checkout') {
            steps {
                git 'https://github.com/pj013525/DevOps-Project-Swiggy.git'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                        ${SCANNER_HOME}/bin/sonar-scanner \
                        -Dsonar.projectKey=Swiggy \
                        -Dsonar.projectName=Swiggy \
                        -Dsonar.projectVersion=1.0 \
                        -Dsonar.sources=. \
                    '''
                }
            }
        }

        stage('Dependency-Check') {
            steps {
                dependencyCheck additionalArguments: '--scan . --format XML --project swiggy-app --out ./reports', odcInstallation: 'dependency-check'
                dependencyCheckPublisher pattern: '**/reports/dependency-check-report.xml'
            }
        }

        stage('Scan Files with Trivy') {
            steps {
                sh 'mkdir -p trivy-cache'
                sh 'trivy fs . --cache-dir trivy-cache > trivy-scanned-files.txt'
            }
        }

        stage('Docker Build') {
            steps {
                sh 'docker build -t ${DOCKER_IMAGE} .'
                sh 'docker tag ${DOCKER_IMAGE} ${DOCKER_USER}/${DOCKER_IMAGE}:${APP_VERSION}'
            }
        }

        stage('Docker Push') {
            steps {
               withDockerRegistry(credentialsId: 'dockerhub-creds', url: 'https://index.docker.io/v1/') {
                     sh 'docker push ${DOCKER_UER}/${DOCKER_IMAGE}:${APP_VERSION}'
               }
            }
        }

        stage('Scan Docker Image with Trivy') {
            steps {
                sh 'trivy image ${DOCKER_USER}/${DOCKER_IMAGE}:${APP_VERSION} > trivy-image-scan.txt'
            }
        }

        stage('Run Docker Container') {
            steps {
                sh 'docker run -d -p 3000:3000 --name swiggy ${DOCKER_IMAGE}:${APP_VERSION}'
            }
        }
    }
}
