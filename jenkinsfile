pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'nodejs'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner' 
    }
    stages {
        stage('Git checkout') {
            steps {
                git 'https://github.com/pj013525/DevOps-Project-Swiggy.git'
            }
        }
        stage('Code quality Analysis') {
            steps {
               withSonarQubeEnv('sonar-server') {
                   sh'''
                    $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=swiggy -Dsonar.projectKey=swiggy-app -Dsonar.sources= .'''
               }
            }
        }
         stage('Quality gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-creds'
                }
            }
        }
         stage('Install dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('Dependencies-Check') {
            steps {
               dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit ', odcInstallation: 'dependency-check'
               dependencyCheckPublisher pattern: '**/dependency-check.xml'
            }
        }
         stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivy-scanned-files.txt"
            }
        }
        stage('Build and Push the Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dockerhub-creds', toolName: 'docker') {
                        sh "docker build -t swiggy-image ."
                        sh "docker tag swiggy-image pj013525/swiggy-image:latest"
                        sh "docker push pj013525/swiggy-image"
                    }
                    
                }
           }
        }
        stage('TRIVY IMAGE SCAN') {
            steps {
                sh "trivy image pj013525/swiggy-image:latest > trivy-scanned-images.txt"
            }
        }
        stage('Run the container') {
            steps {
                sh "docker run -d --name Swiggy-App -p 3000:3000 pj013525/swiggy-image:latest"
            }
        }
    }
}
